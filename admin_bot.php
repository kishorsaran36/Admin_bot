<?php
require_once '../admin_db.php';
require_once 'admin_config.php'; // Include admin configuration
require_once 'handlers/logging.php';
require_once 'handlers/messaging.php';
require_once 'handlers/session.php';
require_once 'handlers/admin.php';
require_once 'handlers/video_code.php';
require_once 'handlers/withdrawal.php';
require_once 'handlers/active_codes.php'; // Include the new handler
require_once 'handlers/modify_code.php'; // Include the modify handler
require_once 'handlers/update_code.php'; // Include the update handler
require_once 'handlers/answer_callback.php';
require_once 'handlers/post_code_handler.php';

// Enable error reporting
error_reporting(E_ALL);
ini_set('display_errors', 1);

// ‡§Æ‡•á‡§® ‡§´‡§Ç‡§ï‡•ç‡§∂‡§® ‡§á‡§®‡§ï‡§Æ‡§ø‡§Ç‡§ó ‡§ü‡•á‡§≤‡•Ä‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§Ö‡§™‡§°‡•á‡§ü‡•ç‡§∏ ‡§ï‡•ã ‡§π‡•à‡§Ç‡§°‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è
function handleTelegramWebhook() {
    $update = json_decode(file_get_contents('php://input'), true);
    logMessage("Received update: " . json_encode($update));

    if (!isset($update['message']) && !isset($update['callback_query'])) {
        logMessage("No message or callback query found in the update.");
        return;
    }

    $chatId = null;
    $text = null;
    $callbackData = null;

    if (isset($update['message'])) {
        $message = $update['message'];
        $chatId = $message['chat']['id'];
        $text = $message['text'];
        $username = $message['chat']['username'] ?? 'Unknown';
        logMessage("Received message from $chatId: $text");
    } elseif (isset($update['callback_query'])) {
        $callbackQuery = $update['callback_query'];
        $chatId = $callbackQuery['message']['chat']['id'];
        $callbackData = $callbackQuery['data'];
        logMessage("Received callback query from $chatId: $callbackData");
    }

    // ‡§∏‡•á‡§∂‡§® ‡§°‡•á‡§ü‡§æ ‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç
    $sessionData = loadSessionData();
    logMessage("Successfully loaded session data.");

    if (!isset($sessionData[$chatId])) {
        $sessionData[$chatId] = [];
    }

    // ‡§ï‡•Ä‡§¨‡•ã‡§∞‡•ç‡§° ‡§≤‡•á‡§Ü‡§â‡§ü ‡§°‡§ø‡§´‡§æ‡§á‡§® ‡§ï‡§∞‡•á‡§Ç
    $keyboard = [
        ['Set Video Code', 'Pending Withdrawal Requests', 'Active Codes'],
        ['Post Video Code', 'Pending Scheduled Posts', 'Cancel'] // "Pending Scheduled Posts" ‡§¨‡§ü‡§® ‡§ú‡•ã‡§°‡§º‡§æ
    ];

    // ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§π‡•à‡§Ç‡§°‡§≤‡§ø‡§Ç‡§ó
    if ($text === "/start") {
        if (isAdmin($chatId)) {
            sendMessageWithButtons($chatId, "Welcome to the admin bot! Please choose an option:", $keyboard);
            logMessage("Admin $chatId started the bot.");
        } else {
            sendMessage($chatId, "üö´ The bot is currently not working.");
            logMessage("Unauthorized user $chatId tried to start the bot.");
        }
        $sessionData[$chatId]['step'] = null;
    } elseif (strpos($text, "/setadmin") === 0) {
        $parts = explode(' ', $text);
        if (isset($parts[1]) && $parts[1] === ADMIN_ACCESS_CODE) {
            registerAdmin($chatId);
            sendMessageWithButtons($chatId, "‚úÖ You are now registered as an admin! Please choose an option:", $keyboard);
            logMessage("User $chatId registered as admin.");
        } else {
            sendMessage($chatId, "‚ùå Invalid admin access code.");
            logMessage("User $chatId provided an invalid admin access code.");
        }
        $sessionData[$chatId]['step'] = null;
    } elseif (strpos($text, "/cancel_scheduled_") === 0) { // Cancel scheduled post command
        $postId = str_replace('/cancel_scheduled_', '', $text);
        handleCancelScheduledPostCallback($chatId, $postId);
        return; // Exit to prevent further processing of this message as a step
    }
     else {
        if (!isAdmin($chatId)) {
            sendMessage($chatId, "üö´ The bot is currently not working.");
            logMessage("Unauthorized user $chatId tried to interact with the bot.");
            return;
        }

        switch ($sessionData[$chatId]['step']) {
            case 'set_video_code_bulk_count':
            case 'set_video_code_t1_price':
            case 'set_video_code_t1_expiry_bulk':
                handleSetVideoCodeSteps($chatId, $text, $sessionData);
                break;
            case 'awaiting_video_duration': // **‡§®‡§Ø‡§æ ‡§ï‡•á‡§∏: ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§°‡•ç‡§Ø‡•Ç‡§∞‡•á‡§∂‡§® ‡§ï‡§æ ‡§á‡§Ç‡§§‡§ú‡§æ‡§∞**
                $videoDuration = intval($text); // ‡§°‡•ç‡§Ø‡•Ç‡§∞‡•á‡§∂‡§® ‡§ï‡•ã integer ‡§Æ‡•á‡§Ç ‡§ï‡§®‡•ç‡§µ‡§∞‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç
                if ($videoDuration <= 0) {
                    sendMessage($chatId, "‚ùå Invalid video duration. Please enter a valid number of minutes (e.g., 5).");
                    $sessionData[$chatId]['step'] = 'awaiting_video_duration'; // ‡§â‡§∏‡•Ä ‡§∏‡•ç‡§ü‡•á‡§™ ‡§™‡§∞ ‡§∞‡§π‡•á‡§Ç
                } else {
                    $sessionData[$chatId]['video_duration'] = $videoDuration; // ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§°‡•ç‡§Ø‡•Ç‡§∞‡•á‡§∂‡§® ‡§∏‡•á‡§∂‡§® ‡§°‡•á‡§ü‡§æ ‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ï‡§∞‡•á‡§Ç
                    sendMessage($chatId, "‚úèÔ∏è Please enter the schedule time in 4-digit 24-hour format (e.g., 1813 for 18:13):"); // ‡§∂‡•á‡§°‡•ç‡§Ø‡•Ç‡§≤‡§ø‡§Ç‡§ó ‡§ü‡§æ‡§á‡§Æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•Ç‡§õ‡•á‡§Ç
                    $sessionData[$chatId]['step'] = 'awaiting_schedule_time'; // ‡§Ö‡§ó‡§≤‡•á ‡§∏‡•ç‡§ü‡•á‡§™ ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Å
                }
                break;
            case 'awaiting_schedule_time': // **‡§®‡§Ø‡§æ ‡§ï‡•á‡§∏: ‡§∂‡•á‡§°‡•ç‡§Ø‡•Ç‡§≤‡§ø‡§Ç‡§ó ‡§ü‡§æ‡§á‡§Æ ‡§ï‡§æ ‡§á‡§Ç‡§§‡§ú‡§æ‡§∞**
                $scheduleTime4Digit = str_replace(' ', '', $text);
                $sessionData[$chatId]['schedule_time_4digit'] = $scheduleTime4Digit; // ‡§∂‡•á‡§°‡•ç‡§Ø‡•Ç‡§≤‡§ø‡§Ç‡§ó ‡§ü‡§æ‡§á‡§Æ ‡§∏‡•á‡§∂‡§® ‡§°‡•á‡§ü‡§æ ‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ï‡§∞‡•á‡§Ç
                sendMessage($chatId, "‚úèÔ∏è Please enter the video code to post:"); // ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•ã‡§° ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•Ç‡§õ‡•á‡§Ç
                $sessionData[$chatId]['step'] = 'awaiting_post_video_code'; // ‡§Ö‡§ó‡§≤‡•á ‡§∏‡•ç‡§ü‡•á‡§™ ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Å
                break;
            case 'awaiting_post_video_code': // ‡§™‡•ã‡§∏‡•ç‡§ü ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•ã‡§° ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§Ø‡§æ ‡§ï‡•á‡§∏
                $videoCode = $text;
                $videoDuration = $sessionData[$chatId]['video_duration']; // ‡§∏‡•á‡§∂‡§® ‡§°‡•á‡§ü‡§æ ‡§∏‡•á ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§°‡•ç‡§Ø‡•Ç‡§∞‡•á‡§∂‡§® ‡§≤‡•á‡§Ç
                $scheduleTime4Digit = $sessionData[$chatId]['schedule_time_4digit']; // ‡§∏‡•á‡§∂‡§® ‡§°‡•á‡§ü‡§æ ‡§∏‡•á ‡§∂‡•á‡§°‡•ç‡§Ø‡•Ç‡§≤‡§ø‡§Ç‡§ó ‡§ü‡§æ‡§á‡§Æ ‡§≤‡•á‡§Ç
                logMessage("Scheduling video code: $videoCode for posting with duration: $videoDuration and schedule time: $scheduleTime4Digit");
                scheduleVideoPostToChannel($chatId, $videoCode, $videoDuration, $scheduleTime4Digit); // ‡§∂‡•á‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§™‡•ã‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó ‡§´‡§Ç‡§ï‡•ç‡§∂‡§® ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç, ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§°‡•ç‡§Ø‡•Ç‡§∞‡•á‡§∂‡§® ‡§î‡§∞ ‡§∂‡•á‡§°‡•ç‡§Ø‡•Ç‡§≤‡§ø‡§Ç‡§ó ‡§ü‡§æ‡§á‡§Æ ‡§™‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç
                sendMessageWithButtons($chatId, "Operation completed. Please choose an option:", $keyboard); // ‡§Æ‡•á‡§® ‡§Æ‡•á‡§®‡•Ç ‡§™‡§∞ ‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§è‡§Å
                $sessionData[$chatId]['step'] = null; // ‡§∏‡•ç‡§ü‡•á‡§™ ‡§∞‡•Ä‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
                break;
            case 'awaiting_redeem_code':
            case 'awaiting_t1_amount':
            case 'awaiting_t1_expiry':
            case 'awaiting_t2_amount':
            case 'awaiting_t2_expiry':
                list($code, $field) = explode('|', $sessionData[$chatId]['modify_data']);
                logMessage("Updating code: $code, field: $field with value: $text");

                // --- ‡§®‡§Ø‡§æ: 4-‡§°‡§ø‡§ú‡§ø‡§ü ‡§ü‡§æ‡§á‡§Æ ‡§´‡•â‡§∞‡•ç‡§Æ‡•á‡§ü ‡§™‡•ç‡§∞‡•ã‡§∏‡•á‡§∏‡§ø‡§Ç‡§ó ‡§è‡§ï‡•ç‡§∏‡§™‡§æ‡§Ø‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ---
                if (in_array($field, ['t1_expiry', 't2_expiry'])) {
                    $expiry_time_4digit = str_replace(' ', '', $text);
                    $currentDate = date('Y-m-d');
                    $expiry_datetime = DateTime::createFromFormat('Y-m-d Hi', "$currentDate $expiry_time_4digit");

                    // ‡§™‡§æ‡§∏‡•ç‡§ü ‡§ü‡§æ‡§á‡§Æ‡•ç‡§∏ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§°‡§ú‡§∏‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç
                    if ($expiry_datetime < new DateTime()) {
                        $expiry_datetime->modify('+1 day');
                    }

                    if (!$expiry_datetime) {
                        sendMessage($chatId, "‚ùå Invalid expiry time format. Please use 4-digit 24-hour format (e.g., 1813 for 18:13).");
                        logMessage("Error: Invalid expiry time format provided: $text");
                        return;
                    }

                    $formatted_expiry_datetime = $expiry_datetime->format('Y-m-d H:i:s');
                    handleUpdateCode($chatId, $code, $field, $formatted_expiry_datetime);
                } else {
                    // ‡§¶‡•Ç‡§∏‡§∞‡•á ‡§´‡•Ä‡§≤‡•ç‡§°‡•ç‡§∏ (redeem, t1_amount, t2_amount) ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§ï‡•ã ‡§∏‡•Ä‡§ß‡•á ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§ï‡§∞‡•á‡§Ç
                    handleUpdateCode($chatId, $code, $field, $text);
                }
                // --- ‡§è‡§Ç‡§° ‡§®‡§Ø‡§æ: 4-‡§°‡§ø‡§ú‡§ø‡§ü ‡§ü‡§æ‡§á‡§Æ ‡§´‡•â‡§∞‡•ç‡§Æ‡•á‡§ü ‡§™‡•ç‡§∞‡•ã‡§∏‡•á‡§∏‡§ø‡§Ç‡§ó ‡§è‡§ï‡•ç‡§∏‡§™‡§æ‡§Ø‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ---

                sendMessage($chatId, "‚úÖ Code updated successfully.");
                $sessionData[$chatId]['step'] = null;
                break;
            default:
                if ($callbackData) {
                    logMessage("Handling callback data: $callbackData");
                    if (strpos($callbackData, 'activeCodes_') === 0) {
                        $page = (int)str_replace('activeCodes_', '', $callbackData);
                        handleActiveCodes($chatId, $page);
                    } elseif (strpos($callbackData, 'modify_') === 0) {
                        $code = str_replace('modify_', '', $callbackData);
                        handleModifyCode($chatId, $code);
                        $sessionData[$chatId]['step'] = 'modify_code';
                        $sessionData[$chatId]['modify_code'] = $code;
                    } elseif (strpos($callbackData, 'edit_') === 0) {
                        // --- UPDATED CALLBACK DATA ‡§™‡§æ‡§∞‡•ç‡§∏‡§ø‡§Ç‡§ó ‡§≤‡•â‡§ú‡§ø‡§ï (‡§∞‡•ã‡§¨‡§∏‡•ç‡§ü & ‡§∞‡§ø‡§°‡•Ä‡§Æ ‡§´‡§ø‡§ï‡•ç‡§∏) ---
                        $parts = explode('_', $callbackData);
                        if (count($parts) >= 2 && $parts[0] === 'edit') {
                            $action = $parts[1]; // ‡§°‡§ø‡§´‡§º‡•â‡§≤‡•ç‡§ü ‡§è‡§ï‡•ç‡§∂‡§® ‡§¶‡•Ç‡§∏‡§∞‡§æ ‡§™‡§æ‡§∞‡•ç‡§ü ‡§π‡•à
                            $code = end($parts); // ‡§ï‡•ã‡§° ‡§Ö‡§≠‡•Ä ‡§≠‡•Ä ‡§≤‡§æ‡§∏‡•ç‡§ü ‡§™‡§æ‡§∞‡•ç‡§ü ‡§π‡•à

                            // t1_amt, t1_exp, t2_amt, t2_exp ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï‡•ç‡§∂‡§® ‡§∞‡§ø‡§ï‡§Ç‡§∏‡•ç‡§ü‡•ç‡§∞‡§ï‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç (‡§Ö‡§ó‡§∞ 3 ‡§∏‡•á ‡§ú‡§º‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§™‡§æ‡§∞‡•ç‡§ü‡•ç‡§∏ ‡§π‡•à‡§Ç)
                            if (count($parts) >= 3 && !in_array($action, ['redeem'])) { // ‡§è‡§ï‡•ç‡§∂‡§® ‡§∞‡§ø‡§ï‡§Ç‡§∏‡•ç‡§ü‡•ç‡§∞‡§ï‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç ‡§∏‡§ø‡§∞‡•ç‡§´ ‡§Ö‡§ó‡§∞ 'redeem' ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à ‡§î‡§∞ 3 ‡§∏‡•á ‡§ú‡§º‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§™‡§æ‡§∞‡•ç‡§ü‡•ç‡§∏ ‡§π‡•à‡§Ç
                                $action = $parts[1] . '_' . $parts[2];
                            }

                            $validActions = ['redeem', 't1_amt', 't1_exp', 't2_amt', 't2_exp'];
                            if (!in_array($action, $validActions)) {
                                logMessage("Error: Invalid edit action: " . $action);
                                if (isset($update['callback_query']['id'])) {
                                    answerCallbackQuery($update['callback_query']['id'], "Error: Invalid action.");
                                }
                                return;
                            }

                            $callback_query_id = $update['callback_query']['id'];
                            answerCallbackQuery($callback_query_id, "Processing your request...");
                            logMessage("Handling edit action: $action for code: $code");

                            switch ($action) {
                                case 'redeem':
                                    sendMessage($chatId, "‚úèÔ∏è Enter new redeem code for {$code}:");
                                    $sessionData[$chatId]['step'] = 'awaiting_redeem_code';
                                    $sessionData[$chatId]['modify_code'] = $code;
                                    $sessionData[$chatId]['modify_data'] = "$code|code";
                                    break;
                                case 't1_amt':
                                    sendMessage($chatId, "‚úèÔ∏è Enter new T1 amount for {$code}:\nFormat: number only (e.g., 100)");
                                    $sessionData[$chatId]['step'] = 'awaiting_t1_amount';
                                    $sessionData[$chatId]['modify_code'] = $code;
                                    $sessionData[$chatId]['modify_data'] = "$code|t1_amount";
                                    break;
                                case 't1_exp':
                                    sendMessage($chatId, "‚úèÔ∏è Enter new T1 expiry time (e.g., 1813, 2240, 0930, 1505, 2130):"); // ‡§Ö‡§™‡§°‡•á‡§ü‡•á‡§° ‡§™‡•ç‡§∞‡•â‡§Æ‡•ç‡§™‡•ç‡§ü ‡§Æ‡•à‡§∏‡•á‡§ú
                                    $sessionData[$chatId]['step'] = 'awaiting_t1_expiry';
                                    $sessionData[$chatId]['modify_code'] = $code;
                                    $sessionData[$chatId]['modify_data'] = "$code|t1_expiry";
                                    break;
                                case 't2_amt':
                                    sendMessage($chatId, "‚úèÔ∏è Enter new T2 amount for {$code}:\nFormat: number only (e.g., 200)");
                                    $sessionData[$chatId]['step'] = 'awaiting_t2_amount';
                                    $sessionData[$chatId]['modify_code'] = $code;
                                    $sessionData[$chatId]['modify_data'] = "$code|t2_amount";
                                    break;
                                case 't2_exp':
                                    sendMessage($chatId, "‚úèÔ∏è Enter new T2 expiry time (e.g., 1813, 2240, 0930, 1505, 2130):"); // ‡§Ö‡§™‡§°‡•á‡§ü‡•á‡§° ‡§™‡•ç‡§∞‡•â‡§Æ‡•ç‡§™‡•ç‡§ü ‡§Æ‡•à‡§∏‡•á‡§ú
                                    $sessionData[$chatId]['step'] = 'awaiting_t2_expiry';
                                    $sessionData[$chatId]['modify_code'] = $code;
                                    $sessionData[$chatId]['modify_data'] = "$code|t2_expiry";
                                    break;
                            }
                        } else {
                            // ‡§è‡§°‡§ø‡§ü ‡§è‡§ï‡•ç‡§∂‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§á‡§®‡§µ‡•à‡§≤‡§ø‡§° callbackData ‡§´‡•â‡§∞‡•ç‡§Æ‡•á‡§ü ‡§π‡•à‡§Ç‡§°‡§≤ ‡§ï‡§∞‡•á‡§Ç
                            logMessage("Error: Invalid callbackData format for edit action: " . $callbackData);
                            if (isset($update['callback_query']['id'])) {
                                $callback_query_id = $update['callback_query']['id'];
                                answerCallbackQuery($callback_query_id, "Error: Invalid request format.");
                            }
                        }
                        // --- ‡§è‡§Ç‡§° UPDATED CALLBACK DATA ‡§™‡§æ‡§∞‡•ç‡§∏‡§ø‡§Ç‡§ó ‡§≤‡•â‡§ú‡§ø‡§ï ---
                    }
                    logMessage("Updated session step to: " . $sessionData[$chatId]['step']);
                } else {
                    switch ($text) {
                        case 'Set Video Code':
                            sendMessage($chatId, "Please enter the number of codes to generate:");
                            logMessage("Admin $chatId selected Set Video Code.");
                            $sessionData[$chatId]['step'] = 'set_video_code_bulk_count';
                            break;
                        case 'Pending Withdrawal Requests':
                            handlePendingWithdrawalRequests($chatId);
                            break;
                        case 'Active Codes':
                            handleActiveCodes($chatId);
                            break;
                        case 'Post Video Code': // ‡§™‡•ã‡§∏‡•ç‡§ü ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•ã‡§° ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§Ø‡§æ ‡§ï‡•á‡§∏
                            sendMessage($chatId, "‚úèÔ∏è Please enter video duration in minutes (e.g., 5):"); // ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§°‡•ç‡§Ø‡•Ç‡§∞‡•á‡§∂‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•Ç‡§õ‡•á‡§Ç
                            logMessage("Admin $chatId selected Post Video Code.");
                            $sessionData[$chatId]['step'] = 'awaiting_video_duration'; // ‡§®‡§Ø‡§æ ‡§∏‡•ç‡§ü‡•á‡§™ ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
                            break;
                        case 'Pending Scheduled Posts': // "Pending Scheduled Posts" ‡§¨‡§ü‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§Ø‡§æ ‡§ï‡•á‡§∏
                            handlePendingScheduledPosts($chatId); // ‡§´‡§Ç‡§ï‡•ç‡§∂‡§® ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç
                            break;
                        case '‚¨ÖÔ∏è Previous':
                            handleActiveCodes($chatId, max(1, $sessionData[$chatId]['page'] - 1));
                            $sessionData[$chatId]['page'] = max(1, $sessionData[$chatId]['page'] - 1);
                            break;
                        case 'Next ‚û°Ô∏è':
                            handleActiveCodes($chatId, $sessionData[$chatId]['page'] + 1);
                            $sessionData[$chatId]['page'] = $sessionData[$chatId]['page'] + 1;
                            break;
                        case 'Cancel':
                            sendMessageWithButtons($chatId, "Operation cancelled. Please choose an option:", $keyboard);
                            logMessage("Admin $chatId cancelled the operation.");
                            $sessionData[$chatId]['step'] = null;
                            break;
                        default:
                            sendMessageWithButtons($chatId, "‚ùì Please use the buttons to interact with the bot.", $keyboard);
                            logMessage("Admin $chatId sent an unknown command: $text");
                            break;
                    }
                }
                break;
        }
    }

    // ‡§∏‡•á‡§∂‡§® ‡§°‡•á‡§ü‡§æ ‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç
    saveSessionData($sessionData);
    logMessage("Successfully saved session data.");
}

function handlePendingScheduledPosts($chatId, $page = 1) { // ‡§´‡§Ç‡§ï‡•ç‡§∂‡§® ‡§ï‡•ã ‡§™‡•á‡§ú ‡§®‡§Ç‡§¨‡§∞ ‡§™‡•à‡§∞‡§æ‡§Æ‡•Ä‡§ü‡§∞ ‡§≤‡•á‡§Ç
    $postsPerPage = 5; // ‡§π‡§∞ ‡§™‡•á‡§ú ‡§™‡§∞ ‡§™‡•ã‡§∏‡•ç‡§ü‡•ç‡§∏ ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ
    $pendingPosts = fetchPendingScheduledPosts($page, $postsPerPage); // ‡§™‡•á‡§ú‡§ø‡§®‡•á‡§ü‡•á‡§° ‡§™‡•ã‡§∏‡•ç‡§ü‡•ç‡§∏ fetch ‡§ï‡§∞‡•á‡§Ç
    $totalPostsCount = getTotalPendingPostsCount(); // ‡§ï‡•Å‡§≤ ‡§™‡•ã‡§∏‡•ç‡§ü‡•ç‡§∏ ‡§ï‡§æ‡§â‡§Ç‡§ü fetch ‡§ï‡§∞‡•á‡§Ç
    $totalPages = ceil($totalPostsCount / $postsPerPage); // ‡§ï‡•Å‡§≤ ‡§™‡•á‡§ú ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§ï‡•à‡§≤‡§ï‡•Å‡§≤‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç

    if (empty($pendingPosts)) {
        sendMessage($chatId, "‚úÖ There are no pending scheduled posts.");
        return;
    }

    $message = "‚è≥ *Pending Scheduled Posts (Page {$page}/{$totalPages}):*\n\n"; // ‡§™‡•á‡§ú ‡§®‡§Ç‡§¨‡§∞‡§ø‡§Ç‡§ó ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
    $buttons = []; // ‡§á‡§®‡§≤‡§æ‡§á‡§® ‡§¨‡§ü‡§®‡•ç‡§∏ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ê‡§∞‡•á

    foreach ($pendingPosts as $post) {
        $scheduledTime = date('d M Y H:i', strtotime($post['scheduled_datetime']));
        $message .= "Code: `{$post['video_code']}`\n";
        $message .= "Duration: {$post['video_duration']} minutes\n";
        $message .= "Schedule: {$scheduledTime}\n";
        // $message .= "/cancel_scheduled_{$post['id']}\n\n"; // ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§≤‡§æ‡§á‡§® ‡§ï‡•Ä ‡§ú‡§ó‡§π ‡§π‡§ü‡§æ‡§è‡§Å
        $buttons[] = [ // Cancel Schedule ‡§¨‡§ü‡§® ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
            ['text' => "‚ùå Cancel Schedule", 'callback_data' => "cancel_schedule_{$post['id']}"]
        ];
        $message .= "\n"; // ‡§™‡•ã‡§∏‡•ç‡§ü‡•ç‡§∏ ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§ó‡•à‡§™
    }
    // $message .= "\nTo cancel a scheduled post, use the command above its details (e.g., /cancelscheduled123)"; // ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§á‡§Ç‡§∏‡•ç‡§ü‡•ç‡§∞‡§ï‡•ç‡§∂‡§® ‡§π‡§ü‡§æ‡§è‡§Å

    // ‡§™‡•á‡§ú‡§ø‡§®‡•á‡§∂‡§® ‡§¨‡§ü‡§®‡•ç‡§∏ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç ‡§Ö‡§ó‡§∞ ‡§Æ‡§≤‡•ç‡§ü‡•Ä‡§™‡§≤ ‡§™‡•á‡§ú ‡§π‡•à‡§Ç
    if ($totalPages > 1) {
        $paginationRow = [];
        if ($page > 1) {
            $paginationRow[] = ['text' => "‚¨ÖÔ∏è Previous", 'callback_data' => 'pendingSchedule_prev'];
        }
        if ($page < $totalPages) {
            $paginationRow[] = ['text' => "Next ‚û°Ô∏è", 'callback_data' => 'pendingSchedule_next'];
        }
        if (!empty($paginationRow)) {
            $buttons[] = $paginationRow;
        }
    }

    $buttons[] = [['text' => "‚ùå Cancel", 'callback_data' => 'cancel']]; // ‡§ó‡•ç‡§≤‡•ã‡§¨‡§≤ Cancel ‡§¨‡§ü‡§® ‡§ú‡•ã‡§°‡§º‡•á‡§Ç

    sendMessageWithInlineKeyboard($chatId, $message, $buttons);
}


function handleCancelScheduledPostCallback($chatId, $postId) { // ‡§®‡§Ø‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§® Cancel Schedule ‡§ï‡•â‡§≤‡§¨‡•à‡§ï ‡§π‡•à‡§Ç‡§°‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è
    if (cancelScheduledPost($postId)) { // ‡§™‡•ã‡§∏‡•ç‡§ü ‡§ï‡•à‡§Ç‡§∏‡§ø‡§≤ ‡§ï‡§∞‡•á‡§Ç
        sendMessage($chatId, "‚úÖ Scheduled post ID {$postId} cancelled successfully.");
        logMessage("Scheduled post ID {$postId} cancelled by admin $chatId.");
    } else {
        sendMessage($chatId, "‚ùå Failed to cancel scheduled post ID {$postId}. Please check logs.");
        logMessage("Error cancelling scheduled post ID {$postId} by admin $chatId.");
    }
    handlePendingScheduledPosts($chatId, $_SESSION[$chatId]['pending_schedule_page'] ?? 1); // ‡§™‡•á‡§Ç‡§°‡§ø‡§Ç‡§ó ‡§™‡•ã‡§∏‡•ç‡§ü‡•ç‡§∏ ‡§≤‡§ø‡§∏‡•ç‡§ü ‡§∞‡§ø‡§´‡•ç‡§∞‡•á‡§∂ ‡§ï‡§∞‡•á‡§Ç
}


handleTelegramWebhook();
?>
